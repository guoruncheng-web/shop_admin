name: Deploy Backend to Production

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '21.7.0'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: ./backend
        run: npm install --legacy-peer-deps

      - name: Build application
        working-directory: ./backend
        run: npm run build

      - name: Run tests
        working-directory: ./backend
        run: npm run test
        continue-on-error: true

      - name: Upload dist to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "backend/dist/*,backend/package.json,backend/package-lock.json,backend/ecosystem.config.js"
          target: "/www/wwwroot/shop_admin/bk_admin/backend"
          strip_components: 1
          overwrite: true

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -ex  # 显示执行的命令

            # 设置变量
            APP_DIR="/www/wwwroot/shop_admin/bk_admin/backend"

            # 创建目录（如果不存在）
            echo "Creating app directory..."
            mkdir -p $APP_DIR
            cd $APP_DIR

            echo "Current directory: $(pwd)"
            echo "Files in directory:"
            ls -la

            # 加载 nvm 并设置版本
            echo "Setting up Node.js environment..."
            export NVM_DIR="$HOME/.nvm"
            if [ -s "$NVM_DIR/nvm.sh" ]; then
              # 加载 nvm 并直接切换到指定版本（服务器已预装）
              . "$NVM_DIR/nvm.sh"
              echo "Using Node.js ${NODE_VERSION} via nvm..."
              nvm use "${NODE_VERSION}" || { echo "❌ nvm use ${NODE_VERSION} failed"; exit 1; }
            else
              echo "❌ nvm not found at $NVM_DIR"; exit 1
            fi

            # 验证版本
            if command -v node >/dev/null 2>&1; then
              echo "Node.js version: $(node -v)"
            else
              echo "❌ Node.js not found in PATH"; exit 1
            fi
            if command -v npm >/dev/null 2>&1; then
              echo "npm version: $(npm -v)"
            else
              echo "❌ npm not found in PATH"; exit 1
            fi

            # 确保 pm2 可用（与当前 Node 版本一致）
            if ! command -v pm2 >/dev/null 2>&1; then
              echo "Installing pm2 globally..."
              npm i -g pm2
            fi

            # 只安装生产依赖
            echo "Installing production dependencies..."
            npm install --production --legacy-peer-deps || npm install --production || true

            # 检查 .env.production
            if [ -f .env.production ]; then
              echo "✓ .env.production found"
              echo "Checking configuration..."
              grep -E "DATABASE_HOST|REDIS_HOST|NODE_ENV" .env.production || echo "⚠️  Please verify database and redis config"
            else
              echo "❌ .env.production not found! Please create it manually with:"
              echo "  DATABASE_HOST, DATABASE_PASSWORD"
              echo "  REDIS_HOST, REDIS_PASSWORD"
              echo "  SESSION_SECRET, JWT_SECRET"
              exit 1
            fi

            # 使用 PM2 重启应用
            echo "Restarting with PM2..."
            pm2 reload ecosystem.config.js --env production 2>/dev/null || pm2 start ecosystem.config.js --env production

            # 保存 PM2 进程列表
            pm2 save

            echo "✅ Deployment completed!"

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.1.0
        continue-on-error: true
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Checking PM2 status..."
            pm2 status || true

            echo "Checking application logs..."
            pm2 logs wechat-mall-backend --lines 20 --nostream || echo "Cannot fetch logs yet"

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
