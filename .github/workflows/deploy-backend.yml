name: Deploy Backend to Production

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.7.1'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm install --legacy-peer-deps

      - name: Build application
        working-directory: ./backend
        run: npm run build

      - name: Run tests
        working-directory: ./backend
        run: npm run test
        continue-on-error: true

      - name: Upload dist to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "backend/dist/*,backend/package.json,backend/package-lock.json,backend/ecosystem.config.js"
          target: "/www/wwwroot/shop_admin/bk_admin/backend"
          strip_components: 1
          overwrite: true

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -ex  # 显示执行的命令

            # 设置变量
            APP_DIR="/www/wwwroot/shop_admin/bk_admin/backend"

            # 创建目录（如果不存在）
            echo "Creating app directory..."
            mkdir -p $APP_DIR
            cd $APP_DIR

            echo "Current directory: $(pwd)"
            echo "Files in directory:"
            ls -la

            # 加载 nvm 环境 (禁用 auto mode)
            echo "Loading nvm..."
            export NVM_DIR="$HOME/.nvm"
            export NVM_AUTO_MODE=""
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use

            # 切换到 Node.js 21.7.1
            echo "Switching to Node.js 21.7.1..."
            if command -v nvm &> /dev/null; then
              nvm use 21.7.1 || nvm use default || true
            fi

            # 验证版本
            echo "Node.js version: $(node -v)"
            echo "npm version: $(npm -v)"

            # 只安装生产依赖
            echo "Installing production dependencies..."
            npm install --production --legacy-peer-deps || npm install --production || true

            # 检查 .env.production
            if [ -f .env.production ]; then
              echo "✓ .env.production found"
            else
              echo "⚠️  .env.production not found, creating from template..."
              if [ -f .env.example ]; then
                cp .env.example .env.production
              fi
            fi

            # 使用 PM2 重启应用
            echo "Restarting with PM2..."
            pm2 reload ecosystem.config.js --env production 2>/dev/null || pm2 start ecosystem.config.js --env production

            # 保存 PM2 进程列表
            pm2 save

            echo "✅ Deployment completed!"

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "Checking PM2 status..."
            pm2 status

            echo "Checking application logs..."
            pm2 logs wechat-mall-backend --lines 20 --nostream

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
